<Page x:Class="Leitner_System.View.StartPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Leitner_System.View"
      xmlns:viewmodel="clr-namespace:Leitner_System.ViewModel"
      xmlns:view="clr-namespace:Leitner_System.View"
      mc:Ignorable="d" 
      d:DesignHeight="400" d:DesignWidth="800"
      Title="Система Лейтнера" x:Name="startPage" GotFocus="startPage_GotFocus" MouseDown="startPage_MouseDown">
    <Page.CommandBindings>
        <CommandBinding x:Name="Copy" Command="ApplicationCommands.Copy" CanExecute="Copy_CanExecute" Executed="Copy_Executed"/>
        <CommandBinding x:Name="Paste" Command="ApplicationCommands.Paste" CanExecute="Paste_CanExecute" Executed="Paste_Executed" />
        <CommandBinding x:Name="Delete" Command="ApplicationCommands.Delete" CanExecute="Delete_CanExecute" Executed="Delete_Executed"/>
        <CommandBinding x:Name="New" Command="ApplicationCommands.New" CanExecute="New_CanExecute" Executed="New_Executed"/>
        <CommandBinding x:Name="Open" Command="ApplicationCommands.Open" CanExecute="Open_CanExecute" Executed="Open_Executed"/>
        <CommandBinding x:Name="Save" Command="ApplicationCommands.Save" CanExecute="Save_CanExecute" Executed="Save_Executed"/>
    </Page.CommandBindings>

    <Page.Resources>
        <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
            <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
            <Setter Property="Background" Value="White"/>
            <!--<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>-->
            <Setter Property="Foreground" Value="#FF52504E"/>
            <Setter Property="BorderThickness" Value="0"/>
            <!--<Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>-->
            <!--<Setter Property="Padding" Value="10"/>-->
            <Setter Property="Margin" Value="15 1"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="MinHeight" Value="15"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="FontSize" Value="8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Border x:Name="border_" BorderThickness="1" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver" />
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox"
                                                Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="Green" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="EditStates">
                                        <VisualState x:Name="Editable">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                             Storyboard.TargetName="PART_EditableTextBox">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Storyboard.TargetName="ContentSite">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Uneditable" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="border" BorderThickness="1" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ToggleButton x:Name="ToggleButton"
                                Background="White"
                                Foreground="#FF52504E"
                                Grid.Column="2"
                                Focusable="false"
                                ClickMode="Press"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
                                RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <Border.CornerRadius>10</Border.CornerRadius>
                                </Border>
                                <ContentPresenter x:Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Left">
                                </ContentPresenter>
                                <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Bottom"
                            Focusable="True"
                            Background= "Red"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}" />
                                <Popup x:Name="Popup"
                             Placement="Bottom"
                             IsOpen="{TemplateBinding IsDropDownOpen}"
                             AllowsTransparency="True"
                             Focusable="False"
                             PopupAnimation="Slide">
                                    <Grid x:Name="DropDown"
                                SnapsToDevicePixels="True"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder"
                                     BorderThickness="1">
                                            <Border.BorderBrush>
                                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                            </Border.BorderBrush>
                                            <Border.Background>
                                                <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                            </Border.Background>
                                        </Border>
                                        <ScrollViewer Margin="2"
                                    SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <Border.CornerRadius>10</Border.CornerRadius>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup" Property="AllowsTransparency"  Value="true">
                                <Setter TargetName="DropDownBorder"  Property="CornerRadius" Value="4" />
                                <Setter TargetName="DropDownBorder" Property="Margin"  Value="0,2,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <BooleanToVisibilityConverter x:Key="visibilityConverter"/>
        <viewmodel:BooleanNotConverter x:Key="notConverter"/>
        <viewmodel:IntegerToVisibilityConverter x:Key="integerToVisibilityConverter"/>
    </Page.Resources>
    <Grid MinWidth="600" MinHeight="350">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Column="0" Grid.Row="0" Background="#FF52504E" Grid.RowSpan="5" Width="Auto"/>
        <Grid Grid.Row="0" Grid.Column="0">
            <Button x:Name="settingsButton" HorizontalAlignment="Left" Margin="10" MaxWidth="50" Grid.Column="0" Style="{DynamicResource WhiteButtonWithText}" Width="Auto" Height="Auto" Click="settingsButton_Click" MouseEnter="settingsButton_MouseEnter" MouseLeave="settingsButton_MouseLeave">
                <Image x:Name="settingsButtonImage"/>
            </Button>
        </Grid>
        <Grid Grid.Row="1" Grid.Column="0" HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100*"/>
                <ColumnDefinition Width="33*"/>
                <ColumnDefinition Width="67*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <!--SelectedIndex="{Binding ReverseSetting, Mode=TwoWay}"-->
            <Button x:Name="SelectAll" Margin="15,1.6,15,1.8" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3" Content="Выбрать все" Click="SelectAll_Click" Style="{DynamicResource WhiteButtonWithText}" IsEnabled="{Binding Decks.Count, Converter={StaticResource integerToVisibilityConverter}}"/>
            <!--<ComboBox x:Name="ReverseSetting" Grid.Row="0" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="70" MinHeight="20" Width="20" Height="13" SelectionChanged="ReverseSetting_SelectionChanged" SelectedIndex="0">-->
            <ComboBox x:Name="ReverseSetting" Grid.Row="0" Grid.Column="1" Style="{DynamicResource ComboBoxStyle}" SelectionChanged="ReverseSetting_SelectionChanged" SelectedIndex="0" Grid.ColumnSpan="2">
                <ComboBoxItem FontSize="12" Content="Прямо"/>
                <ComboBoxItem FontSize="12" Content="Обратно"/>
                <ComboBoxItem FontSize="12" Content="Случайно"/>
                <ComboBoxItem FontSize="12" Content="Пользовательский"/>
            </ComboBox>

        </Grid>

        <ScrollViewer x:Name="deckScrollViewer" Grid.Column="0" Grid.Row="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="15" LostFocus="deckScrollViewer_LostFocus" GotFocus="deckScrollViewer_GotFocus" PreviewMouseWheel="deckScrollViewer_PreviewMouseWheel" Foreground="Black">
            <ListView x:Name="decksList" ItemsSource="{Binding Decks, Mode=OneWay}" SelectionChanged="decksList_SelectionChanged" Background="White" GotFocus="decksList_GotFocus" LostFocus="decksList_LostFocus">

                <ListView.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid Height="25">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="25"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="75"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem x:Name="Copy" Command="ApplicationCommands.Copy"/>
                                    <MenuItem x:Name="Past" Command="ApplicationCommands.Paste"/>
                                    <MenuItem x:Name="Delete" Command="ApplicationCommands.Delete"/>
                                </ContextMenu>
                            </Grid.ContextMenu>
                            <CheckBox x:Name="SelectiontoTraining" IsChecked="{Binding DeckIsSelectedForTraining, Mode=TwoWay}" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="20" MinHeight="20" Width="20" Height="13"/>
                            <!--<CheckBox x:Name="SelectedAsReversed" IsChecked="{Binding DeckIsSelectedAsReversed, Mode=TwoWay}" Grid.Row="0" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="20" MinHeight="20" Width="20" Height="13"/>-->
                            <ComboBox x:Name="ReverseSetting" IsEnabled="{Binding ReverseSettingChangingEnable}" SelectedIndex="{Binding ReverseSetting, Mode=TwoWay}" Grid.Row="0" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="70" MinHeight="20" Width="20" Height="13">
                                <ComboBoxItem Content="Прямо"/>
                                <ComboBoxItem Content="Обратно"/>
                                <ComboBoxItem Content="Случайно"/>
                            </ComboBox>
                            <TextBlock Text="{Binding DeckName}" Grid.Row="0" Grid.Column="1" Margin="10 0"/>
                            <TextBlock Text="{Binding Count}" Grid.Row="0" Grid.Column="2" HorizontalAlignment="Left" Margin="10 0"/>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </ScrollViewer>
        <Grid Margin="0" Grid.Row="3" Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>

            <Button x:Name="chooseFolderButton" Margin="10" Grid.Column="0" Style="{DynamicResource WhiteButtonWithText}" Click="chooseFolderButton_Click" MouseEnter="chooseFolderButton_MouseEnter" MouseLeave="chooseFolderButton_MouseLeave">
                <Image  x:Name="chooseFolderButtonImage"/>
            </Button>
            <Button x:Name="newDeckButton" Margin="10" Grid.Column="1" Style="{DynamicResource WhiteButtonWithText}" Click="newDeckButton_Click" MouseEnter="newDeckButton_MouseEnter" MouseLeave="newDeckButton_MouseLeave">
                <Image  x:Name="newDeckButtonImage"/>
            </Button>
            <Button x:Name="deleteDeckButton" Margin="10" Grid.Column="2" Style="{DynamicResource WhiteButtonWithText}" Click="deleteDeckButton_Click" MouseEnter="deleteDeckButton_MouseEnter" MouseLeave="deleteDeckButton_MouseLeave">
                <Image  x:Name="deleteDeckButtonImage"/>
            </Button>
        </Grid>
        <Button x:Name="startTraining" Grid.Column="0" Grid.Row="4" Click="startTraining_Click" Content="Начать тренировку!" Style="{DynamicResource PurpleButtonWithText}">
            <!--<Button.Effect>
                <DropShadowEffect Color="White" BlurRadius="20" ShadowDepth="0"/>
            </Button.Effect>-->
        </Button>

        <StackPanel Grid.Column="1" Grid.Row="0" Background="#FFFFFF" Grid.RowSpan="5" GotFocus="StackPanel_GotFocus"/>
        <Grid Grid.Column="1" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <TextBox x:Name="deckName" Grid.Column="0" Text="{Binding CurrentDeck.DeckName, Mode=TwoWay}" Style="{DynamicResource TextBoxStyle}"/>
            <Button x:Name="deckSaveButton" Grid.Column="1" Margin="10" Content="Переименовать" Click="deckSaveButton_Click" Style="{DynamicResource DarkButtonWithText}"/>
        </Grid>
        <Grid Grid.Column="1" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
        </Grid>
        <StackPanel Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
            <TextBox x:Name="findCard" Text="{Binding FindCardRequest, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle}" TextChanged="findCard_TextChanged"/>
        </StackPanel>
        <ScrollViewer x:Name="cardScrollViewer" Grid.Column="1" Grid.Row="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="15" GotFocus="ScrollViewer_GotFocus" LostFocus="ScrollViewer_LostFocus" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel" >
            <!--<ScrollViewer x:Name="cardScrollViewer" Grid.Column="1" Grid.Row="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="15" HorizontalScrollBarVisibility="Disabled">-->
            <ListView  x:Name="cardsInDeck" SelectionChanged="cardsInDeck_SelectionChanged" ItemsSource="{Binding Cards}" Background="#FFD5D5D3" GotFocus="cardsInDeck_GotFocus" LostFocus="cardsInDeck_LostFocus">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid Height="25">
                            <Grid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem x:Name="Copy" Command="ApplicationCommands.Copy"/>
                                    <MenuItem x:Name="Past" Command="ApplicationCommands.Paste"/>
                                    <MenuItem x:Name="Delete" Command="ApplicationCommands.Delete"/>
                                </ContextMenu>
                            </Grid.ContextMenu>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding NameOfCard}" HorizontalAlignment="Left" Grid.Column="0"/>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </ScrollViewer>
        <Grid Margin="0" Grid.Row="3" Grid.Column="1" x:Name="cardButtons">
            <Grid.RowDefinitions>
                <RowDefinition Height="23.2"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="newCardButton" Grid.Column="0" Style="{DynamicResource DarkButtonWithText}" Margin="10,10,10,9.8" Grid.RowSpan="2" Click="newCardButton_Click" MouseEnter="newCardButton_MouseEnter" MouseLeave="newCardButton_MouseLeave">
                <Image  x:Name="newCardButtonImage"/>
            </Button>
            <Button x:Name="deleteCardButton" Grid.Column="1" Style="{DynamicResource DarkButtonWithText}" Margin="10,10,10,9.8" Grid.RowSpan="2" Click="deleteCardButton_Click_1" MouseEnter="deleteCardButton_MouseEnter" MouseLeave="deleteCardButton_MouseLeave">
                <Image  x:Name="deleteCardButtonImage"/>
            </Button>
        </Grid>
        <Grid Margin="0" Grid.Row="4" Grid.Column="1" x:Name="enviromentInteractionButtons">
            <Grid.RowDefinitions>
                <RowDefinition Height="23.2"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="importExcel" Grid.Column="0" Style="{DynamicResource DarkButtonWithText}" Margin="10,10,10,9.8" Grid.RowSpan="2" Click="importExcel_Click">
                <Image  x:Name="exportButtonImage"/>
            </Button>
            <Button x:Name="exportEacel" Grid.Column="1" Style="{DynamicResource DarkButtonWithText}" Margin="10,10,10,9.8" Grid.RowSpan="2" Click="exportEacel_Click">
                <Image  x:Name="importButtonImage"/>
            </Button>
        </Grid>
        <view:CardPresentationAndEditingElement x:Name="cardPresentationAndEditingElement" Grid.Column="2" Grid.Row="0" Grid.RowSpan="5"/>
    </Grid>
</Page>
